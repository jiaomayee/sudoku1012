:root {
  /* 定义CSS变量，便于统一管理和响应式调整 */
  --board-width: min(60vh, 60vw, 600px); /* 大屏幕上使用视口较小值，最大600px */
  --control-panel-width: calc(var(--board-width) * 2/3);
  --block-gap: 30px;
  --border-radius: 8px;
}

/* 全局样式重置 */
html, body, * {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

html, body {
  font-family: 'Arial', 'Microsoft YaHei', sans-serif;
  background-color: #f0f2f5;
  color: #333;
  overflow-x: hidden; /* 防止水平滚动条出现 */
  width: 100%;
  height: 100%;
  margin: 0;
  padding: 0;
}

/* 主容器样式 */
.sudoku-game-container {
  max-width: 1200px;
  margin: 0 auto;
  padding: 20px;
  min-height: 100vh;
  display: flex;
  flex-direction: column;
}

/* 游戏内容区域 - 横屏模式使用两行两列布局 */
.main-content {
  flex: 1;
  display: flex;
  flex-direction: column;
  gap: var(--block-gap);
  width: 100%;
  margin-top: 20px;
  align-items: center;
}

/* 顶部行 - 包含导航区块和显示区块 */
.top-row {
  display: flex;
  gap: var(--block-gap);
  width: 100%;
  justify-content: center;
  align-items: center;
  flex-wrap: wrap;
}

/* 底部行 - 包含棋盘区块和操作区块 */
.bottom-row {
  display: flex;
  gap: var(--block-gap);
  width: 100%;
  justify-content: center;
  align-items: flex-start;
  flex-wrap: wrap;
}

/* 导航区块样式 - 移除重复的容器样式，避免两层区块效果 */
.nav-block {
  width: var(--board-width); /* 与数独棋盘宽度一致 */
  height: auto;
}

/* 显示区块样式 - 仅保留错误次数、难度和计时器 */
.display-block {
  background-color: #ffffff;
  border-radius: var(--border-radius);
  padding: 10px 20px; /* 增大左右边距 */
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
  display: flex;
  flex-direction: row; /* 水平排列三个内容项 */
  align-items: center;
  justify-content: space-between;
  gap: 15px; /* 增大三个标签之间的间距 */
  width: var(--control-panel-width); /* 与操作面板宽度一致 */
  height: auto;
  min-height: 0;
  line-height: 1.2;
}

.display-block div {
  display: flex;
  flex-direction: row; /* 水平排列文字和值，使"错误：0"显示在一行 */
  align-items: center;
  justify-content: center;
  margin: 0;
  gap: 4px; /* 增大标签内文字和值之间的间距 */
  line-height: 1.2;
  font-size: 14px; /* 增大标签文字大小 */
}

.display-block .value {
  font-size: 16px; /* 增大数值大小 */
  font-weight: bold;
  color: #34495e; /* 使用主题文字颜色 */
  margin-top: 0;
  padding: 0;
}

.display-block .error-count {
  color: #e74c3c; /* 使用红色字体显示错误次数 */
  font-size: 18px; /* 增大错误次数数值大小 */
  font-weight: bold;
  padding: 0;
}

/* 数独棋盘容器样式 */
.board-container {
  background-color: #ffffff;
  border-radius: var(--border-radius);
  padding: 0 !important; /* 移除所有内边距，保持棋盘完整尺寸 */
  box-shadow: 0 6px 20px rgba(0, 0, 0, 0.2);
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  width: var(--board-width);
  height: var(--board-width);
  position: relative;
  box-sizing: border-box;
  overflow: hidden; /* 防止内容溢出 */
  transition: box-shadow 0.2s ease;
}

.board-container:hover {
  box-shadow: 0 8px 20px rgba(0, 0, 0, 0.18);
}

/* 确保数独棋盘本身占满容器空间 */
.sudoku-board {
  width: 100% !important;
  height: 100% !important;
  position: relative;
  box-sizing: border-box;
  margin: 0 !important;
  padding: 0 !important;
  border-radius: inherit; /* 继承父容器的圆角 */
}

/* 操作面板样式 - 宽度为棋盘宽度的2/3，高度与棋盘一致 */
.control-panel {
  background-color: #ffffff;
  border-radius: var(--border-radius);
  padding: 10px;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
  width: var(--control-panel-width);
  height: var(--board-width);
  position: relative;
  box-sizing: border-box;
  transition: box-shadow 0.2s ease;
}

.control-panel:hover {
  box-shadow: 0 6px 16px rgba(0, 0, 0, 0.15);
}

/* 竖屏模式下的响应式布局 */
  @media (max-width: 991px) {
    :root {
      --board-width: calc(100vw - 16px); /* 最大化利用屏幕宽度，保留8px边距 */
      --control-panel-width: calc(100vw - 16px); /* 操作面板与棋盘宽度一致 */
      --block-gap: 16px; /* 区块间距 */
    }
    
    /* 允许页面正常滚动 */
    html, body {
      position: static;
      width: 100%;
      height: auto;
      overflow-x: hidden;
      overflow-y: auto;
    }
    
    .sudoku-game-container {
      max-width: none; /* 移除最大宽度限制 */
      padding: 0 !important; /* 强制移除内边距 */
      margin: 0 !important; /* 完全填充 */
      min-height: 100vh;
      display: flex;
      flex-direction: column;
      width: 100%; /* 使用100%宽度 */
      box-sizing: border-box;
    }
    
    .main-content {
      margin-top: var(--block-gap);
      gap: var(--block-gap); /* 使用CSS变量控制间距 */
      display: flex;
      flex-direction: column;
      width: 100%;
      overflow-y: visible;
      padding: 0 8px var(--block-gap) 8px; /* 减少水平内边距 */
    }
    
    .top-row {
      flex-direction: column;
      align-items: stretch; /* 让子元素完全填充宽度 */
      gap: var(--block-gap); /* 使用与其他区块相同的间距 */
      margin: 0;
      padding: 0;
      width: 100%;
    }
    
    .bottom-row {
      flex-direction: column;
      align-items: stretch; /* 让子元素完全填充宽度 */
      gap: var(--block-gap); /* 使用CSS变量控制间距 */
      margin: 0;
      padding: 0;
      width: 100%;
    }
  
  .nav-block {
      width: 100%;
      max-width: 100%;
      height: auto;
      padding: 0;
      margin: 0;
    }
    
    /* 竖屏模式下隐藏顶部菜单栏 */
    nav {
      display: none;
    }
    
    .display-block {
      width: 100%;
      max-width: 100%;
      height: auto;
      margin: 0;
      padding: 0;
    }
  
  .board-container {
      width: 100%; /* 完全充满父容器 */
      height: var(--board-width); /* 保持正方形比例 */
      margin: 0 !important;
      padding: 0 !important;
      border-radius: 8px;
      overflow: hidden;
      box-sizing: border-box;
      box-shadow: 0 6px 20px rgba(0, 0, 0, 0.2);
    }
    
    /* 操作面板在竖屏模式下自适应高度 */
    .control-panel {
      width: 100%; /* 完全充满父容器 */
      height: auto; /* 根据内部组件自适应高度 */
      min-height: auto;
      padding: 15px;
      box-sizing: border-box;
      border-radius: var(--border-radius);
      align-self: auto; /* 移除居中设置 */
    }
    
    /* 显示区块样式修改 */
    .display-block {
      background-color: #ffffff;
      padding: 10px 20px;
      box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
      height: auto;
      min-height: 60px;
      gap: 15px; /* 增加内部间距以提高可读性 */
      margin: 0;
      display: flex;
      flex-wrap: nowrap;
      justify-content: space-around;
      width: 100%; /* 完全充满父容器 */
      border-radius: var(--border-radius);
      align-self: auto; /* 移除居中设置 */
    }

  .display-block div {
    font-size: 16px;
    gap: 6px;
    margin: 0;
    flex: 1; /* 让每个信息项平均分配空间 */
    display: flex;
    justify-content: center;
    align-items: center;
  }
  
  .display-block .value {
    font-size: 18px;
    font-weight: bold;
    margin: 0;
  }
  
  .display-block .error-count {
    font-size: 20px;
    font-weight: bold;
    margin: 0;
  }
}

/* 极窄屏幕的额外适配 */
@media (max-width: 480px) {
  :root {
    --board-width: calc(100vw - 12px); /* 最大化利用屏幕宽度，保留6px边距 */
    --block-gap: 12px; /* 保留适当间距 */
  }
  
  .sudoku-game-container {
    padding: 0 !important;
    margin: 0 !important;
    width: 100%;
  }
  
  .main-content {
    padding: 0 6px calc(var(--block-gap) / 2) 6px; /* 进一步减少水平内边距 */
  }
  
  /* 确保数字按钮在小屏幕上也有足够大小 */
  .control-panel button {
    min-height: 40px !important;
    font-size: 18px !important;
  }
}

/* 横屏模式（大屏幕始终使用） */
  @media (min-width: 992px) {
    /* 确保主内容区域使用两行两列布局 */
    .main-content {
      flex-direction: column;
      gap: var(--block-gap);
      width: 100%;
      margin-top: 20px;
      align-items: center;
    }
    
    .top-row,
    .bottom-row {
      display: flex;
      flex-direction: row;
      gap: var(--block-gap);
      width: 100%;
      justify-content: center;
      align-items: flex-start;
    }
  
  .nav-block {
    width: var(--board-width);
    height: auto; /* 保持自动高度 */
  }
  
  .board-container {
    width: var(--board-width);
    height: var(--board-width);
  }
  
  .display-block {
    width: var(--control-panel-width);
    height: auto;
    min-height: 60px;
  }
  
  .control-panel {
    width: var(--control-panel-width);
    height: var(--board-width);
  }
}

/* 游戏暂停蒙板样式 */
.pause-overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.7);
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 1000;
  pointer-events: auto;
  cursor: pointer;
}

.pause-message {
  background-color: #ffffff;
  padding: 30px 40px;
  border-radius: 12px;
  text-align: center;
  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.3);
  animation: fadeIn 0.3s ease-in-out;
  cursor: pointer;
}

.pause-message h2 {
  color: #2c3e50;
  font-size: 28px;
  margin-bottom: 10px;
}

.pause-message p {
  color: #7f8c8d;
  font-size: 16px;
  margin-top: 0;
}

@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(-20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}